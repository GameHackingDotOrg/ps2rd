[PATCH 1/1] ps2cc: change NTPB protocol to only have a single dump command

This is required for Artemis version 0.4.

Signed-off-by: jimmikaelkael <jimmikaelkael@wanadoo.fr>
Signed-off-by: misfire <misfire@xploderfreax.de>

Index: lib_ntpb.c
===================================================================
--- lib_ntpb.c	(revision 315)
+++ lib_ntpb.c	(working copy)
@@ -49,17 +49,11 @@
 const unsigned char *ntpb_hdrMagic = "\xff\x00NTPB";
 #define ntpb_hdrSize  	10
 
-#define NTPBCMD_PRINT_EEDUMP 				0x301
-#define NTPBCMD_PRINT_IOPDUMP				0x302
-#define NTPBCMD_PRINT_KERNELDUMP 			0x303
-#define NTPBCMD_PRINT_SCRATCHPADDUMP		0x304
+#define NTPBCMD_SEND_DUMP 					0x300
 #define NTPBCMD_END_TRANSMIT				0xffff
 
 #define REMOTE_CMD_NONE						0x000
-#define REMOTE_CMD_DUMPEE					0x101
-#define REMOTE_CMD_DUMPIOP					0x102
-#define REMOTE_CMD_DUMPKERNEL				0x103
-#define REMOTE_CMD_DUMPSCRATCHPAD			0x104
+#define REMOTE_CMD_DUMP						0x100
 #define REMOTE_CMD_HALT						0x201
 #define REMOTE_CMD_RESUME					0x202
 #define REMOTE_CMD_ADDMEMPATCHES			0x501
@@ -183,8 +177,7 @@
 
 	switch(remote_cmd)
 	{
-		case REMOTE_CMD_DUMPEE: case REMOTE_CMD_DUMPIOP:
-		case REMOTE_CMD_DUMPKERNEL: case REMOTE_CMD_DUMPSCRATCHPAD:
+		case REMOTE_CMD_DUMP:
 		{
 			dump_size = *((unsigned int *)&pktbuffer[ntpb_hdrSize + 4]) - *((unsigned int *)&pktbuffer[ntpb_hdrSize]);
 		} break;
@@ -247,11 +240,7 @@
 
 			switch(ntpbCmd) { // treat Client Request here
 
-				case NTPBCMD_PRINT_EEDUMP:
-				case NTPBCMD_PRINT_IOPDUMP:
-				case NTPBCMD_PRINT_KERNELDUMP:
-				case NTPBCMD_PRINT_SCRATCHPADDUMP:
-
+				case NTPBCMD_SEND_DUMP:
 					if ((dump_wpos + ntpbpktSize) > dump_size) {
 						MessageBox(GetActiveWindow(),"Error: dump size exeeded !","ntpbclient",MB_ICONERROR | MB_OK);
 						goto error;
@@ -413,8 +402,7 @@
 	}
 	switch (remote_cmd)
 	{
-		case REMOTE_CMD_DUMPEE: case REMOTE_CMD_DUMPIOP:
-		case REMOTE_CMD_DUMPKERNEL: case REMOTE_CMD_DUMPSCRATCHPAD:
+		case REMOTE_CMD_DUMP:
 		{
 			sprintf(ErrTxt, "Please wait for dump to finish and request application shutdown again.");
 			ret = 1;
@@ -466,15 +454,7 @@
 		sprintf(ErrTxt, "Search area start (%08X) is higher thand end (%08X). THINK about it. (DumpRAM)", dump_start, dump_end);
 		return 0;
 	}
-	if ((dump_start >= 00100000) && (dump_end <= 0x02000000)) { //EE Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPEE;
-	} else if ((dump_start >= 0) && (dump_end <= 0x00200000)) { //IOP Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPIOP;
-	} else if ((dump_start >= 0x80000000) && (dump_end <= 0x82000000)) { //Kernel Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPKERNEL;
-	} else if ((dump_start >= 0x70000000) && (dump_end <= 0x70004000)) { //ScratchPad Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPSCRATCHPAD;
-	}
+	cmdInfo.RemoteCMD = REMOTE_CMD_DUMP;
 	//Check that we're trying to dump a valid area
 	if (cmdInfo.RemoteCMD == REMOTE_CMD_NONE) {
 		sprintf(ErrTxt, "Invalid search/dump area specifed. (DumpRAM)");
@@ -595,15 +575,7 @@
 		sprintf(ErrTxt, "Read area start (%08X) is higher than end (%08X).(ReadMem)", dump_start, dump_end);
 		return 0;
 	}
-	if ((dump_start >= 00100000) && (dump_end <= 0x02000000)) { //EE Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPEE;
-	} else if ((dump_start >= 0) && (dump_end <= 0x00200000)) { //IOP Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPIOP;
-	} else if ((dump_start >= 0x80000000) && (dump_end <= 0x82000000)) { //Kernel Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPKERNEL;
-	} else if ((dump_start >= 0x70000000) && (dump_end <= 0x70004000)) { //ScratchPad Dump
-		cmdInfo.RemoteCMD = REMOTE_CMD_DUMPSCRATCHPAD;
-	}
+	cmdInfo.RemoteCMD = REMOTE_CMD_DUMP;
 	//Check that we're trying to dump a valid area
 	if (cmdInfo.RemoteCMD == REMOTE_CMD_NONE) {
 		sprintf(ErrTxt, "Memory area not recognized. (ReadMem)");
Index: tab_search.c
===================================================================
--- tab_search.c	(revision 315)
+++ tab_search.c	(working copy)
@@ -196,8 +196,8 @@
 								} break;
                             	case 1: //IOP
                             	{
-									SetWindowText(hwndSearchAreaLow, "00000000");
-									SetWindowText(hwndSearchAreaHigh, "00200000");
+									SetWindowText(hwndSearchAreaLow, "bc000000");
+									SetWindowText(hwndSearchAreaHigh, "bc200000");
 									EnableWindow (hwndSearchAreaLow, FALSE);
 									EnableWindow (hwndSearchAreaHigh, FALSE);
 								} break;
